#+title: AW data ingestion

Convert activity watcher data to parquet.

* Usage
Just run this every month:
- =make clean= to clean all input data
- =make sourcedata= to get the data for the previous month only.
- =make convert= to convert the new data to parquet and save on the hierarchy


* Activity watcher data

Extracted from the application, .json are in folder =activity-watcher/raw=

** Prerequisites

#+begin_src shell :dir activity-watcher
pyenv virtualenv 3.9.1 activity-watch
pyenv local activity-watch
#+end_src

#+RESULTS:
| Looking     | in      | links:     | /tmp/tmpj1zr6fc4 |    |                                                                                   |          |
| Requirement | already | satisfied: | setuptools       | in | /home/charlie/.pyenv/versions/3.9.1/envs/activity-watch/lib/python3.9/site-packages | (49.2.1) |
| Requirement | already | satisfied: | pip              | in | /home/charlie/.pyenv/versions/3.9.1/envs/activity-watch/lib/python3.9/site-packages | (20.2.3) |

#+begin_src txt :tangle activity-watcher/requirements.txt
pyarrow
pandas
#+end_src

#+begin_src shell :dir activity-watcher
pip install -r requirements.txt
#+end_src

#+RESULTS:
| Collecting   | pyarrow                |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | pyarrow-9.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl | (35.3        | MB)           |                       |               |                  |        |
| Collecting   | pandas                 |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | pandas-1.4.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl  | (11.7        | MB)           |                       |               |                  |        |
| Collecting   | numpy>=1.16.6          |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | numpy-1.23.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl  | (17.1        | MB)           |                       |               |                  |        |
| Collecting   | pytz>=2020.1           |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | pytz-2022.2.1-py2.py3-none-any.whl                                     | (500         | kB)           |                       |               |                  |        |
| Collecting   | python-dateutil>=2.8.1 |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | python_dateutil-2.8.2-py2.py3-none-any.whl                             | (247         | kB)           |                       |               |                  |        |
| Collecting   | six>=1.5               |                                                                        |              |               |                       |               |                  |        |
| Using        | cached                 | six-1.16.0-py2.py3-none-any.whl                                        | (11          | kB)           |                       |               |                  |        |
| Installing   | collected              | packages:                                                              | numpy,       | pyarrow,      | pytz,                 | six,          | python-dateutil, | pandas |
| Successfully | installed              | numpy-1.23.2                                                           | pandas-1.4.3 | pyarrow-9.0.0 | python-dateutil-2.8.2 | pytz-2022.2.1 | six-1.16.0       |        |

** COMMENT Get source data script
This script get the data from the previous month.

#+begin_src shell :tangle activity-watcher/get-data.sh :shebang #!/usr/bin/env bash
SOURCE=$1
TARGET=$2
sqlite3 -batch -header -separator "ุก"\
    "${SOURCE}" \
    "select * from events where datetime(ROUND(starttime/1000000000), 'unixepoch', 'localtime') >= datetime('now', '-1 month', 'start of month', 'localtime') and datetime(ROUND(starttime/1000000000), 'unixepoch', 'localtime') < datetime('now', 'start of month', 'localtime')" \
    > "${TARGET}"
#+end_src

** Makefile
#+begin_src makefile :tangle activity-watcher/Makefile
## ----------------------------------------------------------------------
## Get data, clean everything, build the parquet storage for my activity watcher data
## ----------------------------------------------------------------------

sourcedb := ~/.local/share/activitywatch/aw-server-rust/sqlite-testing.db
targetcsv := input/activity-watcher.csv
targetbucket := s3://
targetprefix := ""


help:     ## Show this help.
	@sed -ne '/@sed/!s/^## //p' $(MAKEFILE_LIST) # Shows the introductory text
# Next line shows the targets nicely formatted
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Delete input data for next cycle
	rm -Rf input/*
	@echo "CLEANED"

cleanall:
	rm -Rf activity-watcher-events/
	rm -Rf input/*
	@echo "CLEANED"
sourcedata: ## Get the .csv from origin write them in input/ after conversion
	echo "Getting data"
	./get-data.sh $(sourcedb) $(targetcsv)
convert: ## Convert input data to parquet format with partitions
	python convert.py
	echo "Conversion finished"

# sync: ## Sincronizar con el bucket s3
# 	aws s3 sync --profile cjaquita reloj-data/ s3://cjbarroso-reloj-data

.DEFAULT_GOAL := help


#+end_src

** Convert to parquet


#+begin_src python :tangle activity-watcher/convert.py
import pandas as pd

#TODO: Usar otro separador porque el engine python es mas lento que el default C, pero n puedo usarlo por el separador de mas de un caracter
df = pd.read_csv('input/activity-watcher.csv', sep='ุก', engine='python')
df.starttime = pd.to_datetime(df.starttime)
df.endtime = pd.to_datetime(df.endtime)

# Evitar errores de precision raros
df['starttime'] = df['starttime'].astype('datetime64[ms]')
df['endtime'] = df['endtime'].astype('datetime64[ms]')

df['year'] = df['starttime'].dt.year
df['month'] = df['starttime'].dt.month
df['day'] = df['starttime'].dt.day

df.to_parquet('activity-watcher-events', partition_cols=['year', 'month', 'day'] )


#+end_src
